- defaults:
    name: 'jmc_global'
    publish_default: false
    release_default: false
    test_default: false
    allow_concurrent_builds: false
    trigger: |
        <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
            <triggers/>
        </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
    platforms: &platforms
        - linux_x86_64:
            docker_agent: |
                agent {{
                    dockerfile {{
                        dir "SapMachine-Infrastructure/dockerfiles/jmc/x86_64"
                        reuseNode true
                        label "{platform}"
                    }}
                }}
        - macos_x86_64:
            docker_agent: ''
        - macos_aarch64:
            docker_agent: ''
        - windows_x86_64:
            docker_agent: ''

- project:
    name: jmc_builds
    platform: *platforms
    jobs:
        - build-jmc-{platform}

- job-template:
    name: build-jmc-{platform}
    defaults: 'jmc_global'
    description: 'JMC build on {platform}.'
    project-type: pipeline
    concurrent: '{allow_concurrent_builds}'
    properties:
        - github:
            url: 'https://github.com/SAP/jmc'
        - build-discarder:
            num-to-keep: 100
            artifact-num-to-keep: 1
        - raw:
            xml: '{trigger}'
    parameters:
        - string:
            name: JMC_GIT_REPOSITORY
            default: 'https://github.com/SAP/jmc'
            description: 'The Git repository to use.'
        - string:
            name: GIT_BRANCH_OR_TAG
            default: 'master'
            description: 'The Git branch or tag to build.'
        - string:
            name: BUILD_JDK
            default: '11'
            description: 'The JDK used to build the JMC'
        - bool:
            name: TEST
            default: '{test_default}'
            description: 'Run tests.'
        - bool:
            name: RELEASE
            default: '{release_default}'
            description: 'When set to true, marks this build as a release build, otherwise as pre-release.'

    dsl: |
        pipeline {{
            agent {{
                label "{platform}"
            }}
            stages {{
                stage("Init") {{
                    steps {{
                        cleanWs deleteDirs: true, disableDeferredWipeout: true
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-Infrastructure']], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }}
                }}
                stage("Checkout Repository") {{
                    steps {{
                        checkout changelog: true, poll: false, scm: [$class: 'GitSCM', branches: [[name: "*/${{params.GIT_BRANCH_OR_TAG}}"]], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'jmc']], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: "${{params.JMC_GIT_REPOSITORY}}"]]]
                    }}
                }}
                stage ('Download Prerequisites'){{
                    steps {{
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD']]) {{
                            sh "python3 SapMachine-Infrastructure/lib/download_boot_jdk.py -m ${{params.BUILD_JDK}} -d ${{WORKSPACE}}"
                        }}
                    }}
                }}
                stage("Build and Basic Tests") {{
                    {docker_agent}
                    environment {{
                        BUILD_JDK = "${{WORKSPACE}}/boot_jdk"
                        JAVA_HOME = "${{WORKSPACE}}/boot_jdk"
                    }}
                    steps {{
                        sh 'SapMachine-Infrastructure/lib/jmc/build.sh'
                    }}
                }}
                stage("Test") {{
                    {docker_agent}
                    when {{
                        expression {{ params.TEST == true }}
                    }}
                    environment {{
                        BUILD_JDK = "${{WORKSPACE}}/boot_jdk"
                    }}
                    steps {{
                        sh 'SapMachine-Infrastructure/lib/jmc/test.sh'
                    }}
                }}
                stage('Archive') {{
                    steps {{
                        script {{
                            archiveArtifacts allowEmptyArchive: true, artifacts: 'jmc/target/products/*.gz'
                            archiveArtifacts allowEmptyArchive: true, artifacts: 'jmc/target/products/*.zip'
                        }}
                    }}
                }}
                stage('Publish GitHub') {{
                    when {{
                        expression {{ params.RELEASE == true && JOB_NAME ==~ /((\S*)(release)(\S*))/ }}
                    }}
                    steps {{
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD']]) {{
                            sh '''
                            SapMachine-Infrastructure/lib/jmc/publish.sh
                            '''
                        }}
                    }}
                }}
            }}
        }}

- job:
    name: jmc-repository-update-and-tag
    description: 'Update JMC repository from OpenJDK, tag and build JMC releases and create JMC merge PRs.'
    project-type: pipeline
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 60
    parameters:
        - bool:
            name: UPDATE_REPOSITORY
            default: true
            description: 'Update JMC repository from OpenJDK.'
        - bool:
            name: TAG_BUILD_AND_MERGE
            default: true
            description: 'Tag new JMC releases, build them and create JMC merge PRs.'
    triggers:
        - timed: "@midnight"
    dsl: |
        pipeline {
            agent {
                label "repository"
            }
            stages {
                stage("Checkout Infrastructure Repository") {
                    steps {
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-Infrastructure']], userRemoteConfigs: [[url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }
                }
                stage('Update SapMachine JMC Repository') {
                    agent {
                        dockerfile {
                            dir "SapMachine-Infrastructure/dockerfiles/infrastructure"
                            reuseNode true
                            label "repository"
                        }
                    }
                    when {
                        beforeAgent true
                        expression { params.UPDATE_REPOSITORY == true }
                    }
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD')]) {
                            sh("SapMachine-Infrastructure/lib/jmc/update_repo.sh")
                        }
                    }
                }
                stage("Checkout SapMachine JMC Repository") {
                    when {
                        expression { params.TAG_BUILD_AND_MERGE == true }
                    }
                    steps {
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: "*/sap"]], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'sapjmc']], userRemoteConfigs: [[url: 'https://github.com/SAP/jmc.git']]]
                    }
                }
            }
        }

- job:
    name: jmc-repo-update
    description: 'Update JMC repository.'
    project-type: pipeline
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 60
    dsl: |
        pipeline {
            agent {
                label "repository"
            }
            stages {
                stage("Checkout Infrastructure Repository") {
                    steps {
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-Infrastructure']], userRemoteConfigs: [[url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }
                }
                stage("Checkout Repository") {
                    steps {
                        checkout changelog: true, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/sap']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'jmc']], userRemoteConfigs: [[url: 'https://github.com/SAP/jmc.git']]]
                    }
                }
                stage('Merge') {
                    agent {
                        dockerfile {
                            dir "SapMachine-Infrastructure/dockerfiles/infrastructure"
                            reuseNode true
                            label "repository"
                        }
                    }
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD')]) {
                            script {
                                env.JMC_BUILD_REQUIRED = sh(
                                        script: "SapMachine-Infrastructure/lib/merge_jmc.sh",
                                        returnStatus: true
                                )
                            }
                        }
                    }
                }
                stage ('Trigger Snapshot Builds') {
                    when {
                        expression { env.JMC_BUILD_REQUIRED != "1" }
                    }
                    steps {
                        parallel (
                            linux_x86_64: {
                                build job: 'build-jmc-official-snapshot-linux_x86_64', parameters: [string(name: 'GIT_BRANCH_OR_TAG', value: 'sap')]
                            },
                            macos_x86_64: {
                                build job: 'build-jmc-official-snapshot-macos_x86_64', parameters: [string(name: 'GIT_BRANCH_OR_TAG', value: 'sap')]
                            },
                            macos_aarch64: {
                                build job: 'build-jmc-official-snapshot-macos_aarch64', parameters: [string(name: 'GIT_BRANCH_OR_TAG', value: 'sap')]
                            },
                            failFast: false
                        )
                    }
                }
            }
        }

- job:
    name: jmc-release-build
    description: 'Build JMC release.'
    project-type: pipeline
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 60
    parameters:
        - string:
            name: VERSION
            description: 'Version of this release'
    dsl: |
        pipeline {
            agent {
                label "repository"
            }
            stages {
                stage("Checkout Infrastructure Repository") {
                    steps {
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-Infrastructure']], userRemoteConfigs: [[url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }
                }
                stage("Checkout Repository") {
                    steps {
                        checkout changelog: true, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/sap']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'jmc']], userRemoteConfigs: [[url: 'https://github.com/SAP/jmc.git']]]
                    }
                }
                stage('Merge') {
                    agent {
                        dockerfile {
                            dir "SapMachine-Infrastructure/dockerfiles/infrastructure"
                            reuseNode true
                            label "repository"
                        }
                    }
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD')]) {
                            script {
                                env.JMC_BUILD_REQUIRED = sh(
                                        script: "SapMachine-Infrastructure/lib/merge_jmc.sh",
                                        returnStatus: true
                                )
                            }
                        }
                    }
                }
                stage ('Trigger Release Builds') {
                    when {
                        expression { env.ASYNC_PROF_RELEASE_TAG != "No new releases" }
                    }
                    steps {
                        parallel (
                            linux_x86_64: {
                                build job: 'build-jmc-official-release-linux_x86_64', parameters: [string(name: 'GIT_BRANCH_OR_TAG', value: 'sap'), string(name: 'GIT_TAG_NAME', value: params.VERSION), [$class: 'BooleanParameterValue', name: 'RELEASE', value: 'true']]
                            },
                            macos_x86_64: {
                                build job: 'build-jmc-official-release-macos_x86_64', parameters: [string(name: 'GIT_BRANCH_OR_TAG', value: 'sap'), string(name: 'GIT_TAG_NAME', value: params.VERSION), [$class: 'BooleanParameterValue', name: 'RELEASE', value: 'true']]
                            },
                            macos_aarch64: {
                                build job: 'build-jmc-official-release-macos_aarch64', parameters: [string(name: 'GIT_BRANCH_OR_TAG', value: 'sap'), string(name: 'GIT_TAG_NAME', value: params.VERSION), [$class: 'BooleanParameterValue', name: 'RELEASE', value: 'true']]
                            },
                            failFast: false
                        )
                    }
                }
            }
        }
