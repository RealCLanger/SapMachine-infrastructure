- defaults:
    name: 'jmc_global'
    publish_default: false
    release_default: false
    allow_concurrent_builds: false
    trigger: |
        <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
            <triggers/>
        </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
    majors: &majors
        - 'official':
           branch_name: master
        - 'sap':
           branch_name: sap
    platforms: &platforms
        - linux_x86_64:
            docker_agent: |
                agent {{
                    dockerfile {{
                        dir "SapMachine-Infrastructure/dockerfiles/ubuntu_20_04_x86_64_jmc"
                        reuseNode true
                        label "{platform}"
                    }}
                }}
        - macos_x86_64:
            docker_agent: ''
        - macos_aarch64:
            docker_agent: ''
        - windows_x86_64:
            docker_agent: ''
    build_types: &build_types
        - snapshot
        - release

- project:
    name: jmc_builds
    major: *majors
    build_type: *build_types
    platform: *platforms
    jobs:
        - build-jmc-{major}-{build_type}-{platform}

- job-template:
    name: build-jmc-{major}-{build_type}-{platform}
    defaults: 'jmc_global'
    description: 'This project is generated. Do not modify manually.'
    project-type: pipeline
    concurrent: '{allow_concurrent_builds}'
    properties:
        - github:
            url: 'https://github.com/SAP/jmc'
        - build-discarder:
            num-to-keep: 100
            artifact-num-to-keep: 1
        - raw:
            xml: '{trigger}'
    parameters:
        - string:
            name: JMC_GIT_REPOSITORY
            default: 'https://github.com/SAP/jmc'
            description: 'The Git repository to use.'
        - string:
            name: JMC_GIT_BRANCH
            default: '{branch_name}'
            description: 'The Git branch to build.'
        - string:
            name: GIT_TAG_NAME
            default: ''
            description: 'The Git tag to build.'
        - string:
            name: BUILD_JDK
            default: '11'
            description: 'The JDK used to build the JMC'
        - string:
            name: JMC_ARCHIVE_NAME_PREFIX
            default: 'jmc-{major}-{platform}'
            description: 'The prefix of the bundle archive.'
        - bool:
            name: RELEASE
            default: '{release_default}'
            description: 'When set to true, marks this build as a release build, otherwise as pre-release.'

    dsl: |
        pipeline {{
            agent {{
                label "{platform}"
            }}
            stages {{
                stage("Init") {{
                    steps {{
                        cleanWs deleteDirs: true, disableDeferredWipeout: true
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-Infrastructure']], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }}
                }}
                stage("Checkout Repository") {{
                    steps {{
                        checkout changelog: true, poll: false, scm: [$class: 'GitSCM', branches: [[name: "*/${{params.JMC_GIT_BRANCH}}"]], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'jmc']], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: "${{params.JMC_GIT_REPOSITORY}}"]]]
                    }}
                }}
                stage('Download Prerequisites') {{
                    {docker_agent}
                    steps {{
                        script {{
                            sh "python3 SapMachine-Infrastructure/lib/download_boot_jdk.py -m ${{params.BUILD_JDK}} -d `pwd`"
                        }}
                    }}
                }}
                stage ('Download Prerequisites Windows'){{
                    when {{
                         JOB_NAME ==~ /((\S*)(windows_x86_64)(\S*))/
                    }}
                    steps {{
                        script {{
                            sh 'wget https://github.com/SAP/SapMachine/releases/download/sapmachine-11.0.14.1/sapmachine-jdk-11.0.14.1_windows-x64_bin.zip'
                            sh 'unzip sapmachine-jdk-11.0.14.1_windows-x64_bin.zip'
                            sh 'export JAVA_HOME="`pwd`/sapmachine-jdk-11.0.14.1"'
                            sh 'export PATH="`pwd`/sapmachine-jdk-11.0.14.1/bin:$PATH"'
                            sh 'wget https://dlcdn.apache.org/maven/maven-3/3.8.4/binaries/apache-maven-3.8.4-bin.zip'
                            sh 'unzip apache-maven-3.8.4-bin.zip'
                            sh 'export PATH="`pwd`/apache-maven-3.8.4/bin:$PATH"''
                        }}
                    }}
                }}
                stage("Build and Basic Tests") {{
                    {docker_agent}
                    when {{
                        expression {{ && !(JOB_NAME ==~ /((\S*)(windows_x86_64)(\S*))) }}
                    }}
                    environment {{
                        BUILD_JDK = "${{WORKSPACE}}/boot_jdk"
                    }}
                    steps {{
                        sh 'SapMachine-Infrastructure/lib/build_jmc.sh'
                    }}
                }}
                stage("Build and Basic Tests Windows") {{
                    when {{
                         expression {{ JOB_NAME ==~ /((\S*)(windows_x86_64)(\S*))/ }}
                    }}
                    steps {{
                        sh 'SapMachine-Infrastructure/lib/build_jmc_win.sh'
                    }}
                }}
                stage("Test") {{
                    {docker_agent}
                    when {{
                        expression {{ !(JOB_NAME ==~ /((\S*)(windows_x86_64)(\S*))) }}
                    }}
                    environment {{
                        BUILD_JDK = "${{WORKSPACE}}/boot_jdk"
                    }}
                    steps {{
                        sh 'SapMachine-Infrastructure/lib/test_jmc.sh'
                    }}
                }}
                stage('Archive') {{
                    steps {{
                        script {{
                            def artifact_name = readFile "${{env.WORKSPACE}}/jmc/artifact.txt"

                            step ([$class: 'ArtifactArchiver', artifacts: artifact_name]);
                        }}
                    }}
                }}
                stage('Publish GitHub') {{
                    when {{
                        expression {{ params.RELEASE == true && JOB_NAME ==~ /((\S*)(release)(\S*))/ }}
                    }}
                    steps {{
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD']]) {{
                            sh '''
                            SapMachine-Infrastructure/lib/publish_jmc.sh
                            '''
                        }}
                    }}
                }}
            }}
        }}
