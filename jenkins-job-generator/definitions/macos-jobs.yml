- defaults:
    name: 'publish_macos_global'
    platforms: &platforms
        - macos_x86_64:
            publish_platform: x64
        - macos_aarch64:
            publish_platform: aarch64

- project:
    name: publish-macos-packages
    platform: *platforms
    jobs:
        - publish-macos-packages-{platform}

- job-template:
    name: publish-macos-packages-{platform}
    defaults: 'publish_macos_global'
    description: 'Download MacOS artifacts for {platform} from Artifactory location, do some verification and, if succesful, publish to GitHub'
    project-type: pipeline
    sandbox: true
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 20
            artifact-num-to-keep: 1
    parameters:
        - string:
            name: SAPMACHINE_VERSION
            default: ''
            description: 'The SapMachine Release Tag to upload MacOS artifacts for. Should start with "sapmachine-". E.g. "sapmachine-17.0.6".'
        - string:
            name: BINARY_SOURCE
            default: 'https://common.repositories.cloud.sap/artifactory/naas-deploy-releases-notarization-maven/com/sap/sapmachine'
            description: 'Artifactory location where SapMachine binaries should be taken from.'
        - string:
            name: SYMBOL_SOURCE
            default: 'https://common.repositories.cloud.sap/artifactory/build.releases/com/sap/sapmachine'
            description: 'Artifactory location where symbol bundle should be taken from.'
        - string:
            name: NOTARIZED_SUFFIX
            default: '-notarized'
            description: 'Suffix to be appended to artifacts that are notarized.'
        - bool:
            name: PUBLISH_CASKS
            default: true
            description: 'When set to true, update homebrew casks.'
    dsl: |
        pipeline {{
            agent {{
                label "{platform}"
            }}
            stages {{
                stage("Checkout Infrastructure Repository") {{
                    steps {{
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-infrastructure']], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }}
                }}
                stage("Download Artifactory") {{
                    environment {{
                        ARTIFACTORY_CREDS = credentials('openjdk-artifactory')
                    }}
                    steps {{
                        sh 'SapMachine-infrastructure/lib/download_macos.sh {publish_platform}'
                    }}
                }}
                stage("Verify") {{
                    steps {{
                        sh 'python3 SapMachine-infrastructure/lib/verify_macos_artifacts.py --tag=$SAPMACHINE_VERSION --platform={publish_platform}'
                    }}
                }}
                stage("Publish GitHub") {{
                    steps {{
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD']]) {{
                            sh 'SapMachine-infrastructure/lib/publish_macos.sh {publish_platform}'
                        }}
                    }}
                }}
                stage("Publish Release Data") {{
                    steps {{
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD']]) {{
                            lock('ReleaseDataGenerationLock') {{
                                sh 'python3 SapMachine-infrastructure/lib/generate_release_data.py --no-status -o git -t $SAPMACHINE_VERSION'
                            }}
                        }}
                    }}
                }}
            }}
            post {{
                success {{
                    cleanWs()
                }}
            }}
        }}

- job:
    name: update-cask
    description: 'Updates SapMachine Homebrew Casks.'
    project-type: pipeline
    sandbox: true
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 10
    parameters:
        - string:
            name: SAPMACHINE_VERSION
            default: ''
            description: 'The SapMachine version to publish casks for.'
    dsl: |
        pipeline {
            agent {
                label 'macos_x86_64'
            }
            stages {
                stage("Checkout Infrastructure Repository") {
                    steps {
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-infrastructure']], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }
                }
                stage('Create Brew Casks') {
                    steps {
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD']]) {
                            lock('MacBrewCaskGenerationSynchronizer') {
                                sh 'python3 SapMachine-infrastructure/lib/packagebuild/make_cask.py -t ${SAPMACHINE_VERSION}'
                            }
                        }
                    }
                }
            }
            post {
                always {
                    cleanWs deleteDirs: true, disableDeferredWipeout: true
                }
            }
        }

- job:
    name: prepare-macos-signing
    description: 'Prepares a MacOS node for singing and notarization.'
    project-type: pipeline
    sandbox: true
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 10
    parameters:
        - string:
            name: BUILDNODE
            default: ''
            description: 'The node to prepare for signing and notarization.'
    dsl: |
        pipeline {
            agent {
                label "${BUILDNODE}"
            }
            stages {
                stage('Import signing certificate') {
                    steps {
                        withCredentials([file(credentialsId: 'MacOSCodesignSAP', variable: 'signcertp2'),
                                         string(credentialsId: 'MacOSCodesignSAP-Password', variable: 'signcertpass')]) {
                            sh '''#!/bin/bash
                              security import $signcertp2 -k ~/Library/Keychains/login.keychain -P $signcertpass'''
                        }
                    }
                }
                stage('Setup notarization credentials') {
                    steps {
                        withCredentials([string(credentialsId: 'Notarization-AppleID', variable: 'appleid'),
                                         string(credentialsId: 'Notarization-Password', variable: 'notpass'),
                                         string(credentialsId: 'Notarization-Team', variable: 'notteam'),
                                         string(credentialsId: 'MacOSCodeSignUnlockPW', variable: 'unlockpass')]) {
                            '''#!/bin/bash
                              security unlock-keychain -p $unlockpass ~/Library/Keychains/login.keychain
                              xcrun notarytool store-credentials sapmachine-notarization --apple-id $appleid --password $notpass --team-id $notteam'''
                        }
                    }
                }
            }
            post {
                always {
                    cleanWs deleteDirs: true, disableDeferredWipeout: true
                }
            }
        }
