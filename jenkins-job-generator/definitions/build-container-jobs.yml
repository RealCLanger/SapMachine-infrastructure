- defaults:
    name: 'container_global'
    platforms: &platforms
        - linux_aarch64:
            arch: arm64
            bnode: agent-linux-aarch64-1
        - linux_ppc64le:
            arch: ppc64le
            bnode: agent-linux-ppc64le-1
        - linux_x86_64:
            arch: x86_64
            bnode: agent-linux-x86_64-1
            build_container_alpine: |-
                stage("Build Alpine container") {{
                            steps {{
                                script {{
                                    def pull = params.PULL == true ? '--pull ' : ''
                                    def no_cache = params.NO_CACHE == true ? '--no-cache ' : ''
                                    docker.build('alpine_3-{arch}', pull + no_cache + 'SapMachine-infrastructure/dockerfiles/alpine_3/{arch}/.')
                                }}
                            }}
                        }}
            build_container_infrastructure: |-
                stage("Build Infrastructure container") {{
                            steps {{
                                script {{
                                    def pull = params.PULL == true ? '--pull ' : ''
                                    def no_cache = params.NO_CACHE == true ? '--no-cache ' : ''
                                    docker.build('infrastructure-{arch}', pull + no_cache + 'SapMachine-infrastructure/dockerfiles/infrastructure/.')
                                }}
                            }}
                        }}
            build_container_jtreg: |-
                stage("Build JTReg build container") {{
                            steps {{
                                script {{
                                    def pull = params.PULL == true ? '--pull ' : ''
                                    def no_cache = params.NO_CACHE == true ? '--no-cache ' : ''
                                    docker.build('jtreg-build-{arch}', pull + no_cache + 'SapMachine-infrastructure/dockerfiles/jtreg-build/.')
                                }}
                            }}
                        }}
            build_container_ossrh: |-
                stage("Build OSSRH upload container") {{
                            steps {{
                                script {{
                                    def pull = params.PULL == true ? '--pull ' : ''
                                    def no_cache = params.NO_CACHE == true ? '--no-cache ' : ''
                                    docker.build('ossrh-upload-{arch}', pull + no_cache + 'SapMachine-infrastructure/dockerfiles/ossrh-upload/.')
                                }}
                            }}
                        }}
            build_container_rpm: |-
                stage("Build RPM container") {{
                            steps {{
                                script {{
                                    def pull = params.PULL == true ? '--pull ' : ''
                                    def no_cache = params.NO_CACHE == true ? '--no-cache ' : ''
                                    docker.build('fedora-rpm-{arch}', pull + no_cache + 'SapMachine-infrastructure/dockerfiles/fedora-rpm/.')
                                }}
                            }}
                        }}
            build_container_jmc: |-
                stage("Build JMC container") {{
                            steps {{
                                script {{
                                    def pull = params.PULL == true ? '--pull ' : ''
                                    def no_cache = params.NO_CACHE == true ? '--no-cache ' : ''
                                    docker.build('jmc-{arch}', pull + no_cache + 'SapMachine-infrastructure/dockerfiles/jmc/${arch}/.')
                                }}
                            }}
                        }}

- project:
    name: build-container-builds
    platform: *platforms
    jobs:
        - build-containers-{platform}

- job-template:
    name: build-containers-{platform}
    defaults: 'container_global'
    description: 'Build build containers for {platform}.'
    project-type: pipeline
    sandbox: true
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 10
    parameters:
        - string:
            name: BUILDNODE
            default: '{bnode|}'
            description: 'The node to run docker build on.'
        - bool:
            name: PULL
            default: false
            description: 'Set docker build option --pull'
        - bool:
            name: NO_CACHE
            default: false
            description: 'Set docker build option --no-cache'
    dsl: |
        pipeline {{
            agent {{
                label "${{BUILDNODE}}"
            }}
            stages {{
                stage("Checkout Infrastructure Repository") {{
                    steps {{
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-infrastructure']], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }}
                }}
                stage("Build Ubuntu container") {{
                    steps {{
                        withCredentials([usernameColonPassword(credentialsId: 'openjdk-artifactory', variable: 'ARTIFACTORY_CREDS')]) {{
                            script {{
                                def pull = params.PULL == true ? '--pull ' : ''
                                def no_cache = params.NO_CACHE == true ? '--no-cache ' : ''
                                docker.build('ubuntu_20_04-{arch}', pull + no_cache + '--build-arg ARTIFACTORY_CREDS=\"$ARTIFACTORY_CREDS\" SapMachine-infrastructure/dockerfiles/ubuntu_20_04/{arch}/.')
                            }}
                        }}
                    }}
                }}
                stage("Build Async build container") {{
                    steps {{
                        script {{
                            def pull = params.PULL == true ? '--pull ' : ''
                            def no_cache = params.NO_CACHE == true ? '--no-cache ' : ''
                            docker.build('async-build-{arch}', pull + no_cache + 'SapMachine-infrastructure/dockerfiles/async/{arch}/.')
                        }}
                    }}
                }}
                stage("Build Devkit build container") {{
                    steps {{
                        script {{
                            def pull = params.PULL == true ? '--pull ' : ''
                            def no_cache = params.NO_CACHE == true ? '--no-cache ' : ''
                            docker.build('devkit-build-{arch}', pull + no_cache + 'SapMachine-infrastructure/devkits/dockerfiles/{arch}/.')
                        }}
                    }}
                }}
                {build_container_alpine|}
                {build_container_infrastructure|}
                {build_container_jtreg|}
                {build_container_ossrh|}
                {build_container_rpm|}
                {build_container_jmc|}
                stage("Prune images") {{
                    steps {{
                        script {{
                            sh 'docker image prune -f'
                        }}
                    }}
                }}
                stage("Prune builder") {{
                    steps {{
                        script {{
                            sh 'docker builder prune -f'
                        }}
                    }}
                }}
            }}
            post {{
                always {{
                    cleanWs()
                }}
            }}
        }}

- job:
    name: build-containers-agent-local-bare
    description: 'Build infrastructure container on agent-local-bare.'
    project-type: pipeline
    sandbox: true
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 10
    parameters:
        - string:
            name: BUILDNODE
            default: 'agent-local-bare'
            description: 'The node to run docker build on.'
        - bool:
            name: PULL
            default: false
            description: 'Set docker build option --pull'
        - bool:
            name: NO_CACHE
            default: false
            description: 'Set docker build option --no-cache'
    dsl: |
        pipeline {{
            agent {{
                label "${{BUILDNODE}}"
            }}
            stages {{
                stage("Checkout Infrastructure Repository") {{
                    steps {{
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-infrastructure']], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }}
                }}
                stage("Build Infrastructure container") {{
                    steps {{
                        script {{
                            def pull = params.PULL == true ? '--pull ' : ''
                            def no_cache = params.NO_CACHE == true ? '--no-cache ' : ''
                            docker.build('infrastructure-x86_64', pull + no_cache + 'SapMachine-infrastructure/dockerfiles/infrastructure/.')
                        }}
                    }}
                }}
                stage("Prune images") {{
                    steps {{
                        script {{
                            sh 'docker image prune -f'
                        }}
                    }}
                }}
                stage("Prune builder") {{
                    steps {{
                        script {{
                            sh 'docker builder prune -f'
                        }}
                    }}
                }}
            }}
            post {{
                always {{
                    cleanWs()
                }}
            }}
        }}
