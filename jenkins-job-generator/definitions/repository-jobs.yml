- job:
    name: repository-update
    description: 'This project is generated. Do not modify manually.'
    project-type: pipeline
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 100
    triggers:
        - timed: "@midnight"
    dsl: |
        pipeline {
            agent {
                label "repository"
            }
            stages {
                stage("Checkout Infrastructure") {
                    steps {
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-Infrastructure']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }
                }
                stage('Build') {
                    environment {
                        GITHUB_API_ACCESS_TOKEN = credentials('SapMachine-Github-Token')
                    }
                    agent {
                        dockerfile {
                            dir "SapMachine-Infrastructure/dockerfiles/infrastructure"
                            reuseNode true
                            label "repository"
                        }
                    }
                    steps {
                        sh '''
                        openjdk_repositories=$(python3 SapMachine-Infrastructure/lib/list_openjdk_repositories.py)
                        for i in ${openjdk_repositories}
                        do
                            :
                            SapMachine-Infrastructure/lib/update_repo.sh $i
                        done

                        openjdk_repositories=$(python3 SapMachine-Infrastructure/lib/list_openjdk_repositories.py -m)
                        for i in ${openjdk_repositories}
                        do
                            :
                            SapMachine-Infrastructure/lib/update_repo.sh -m $i
                        done
                        '''
                    }
                }
            }
        }

- job:
    name: repository-tags
    description: 'This project is generated. Do not modify manually.'
    project-type: pipeline
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 100
        - raw:
            xml: |
                <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
                    <triggers>
                        <jenkins.triggers.ReverseBuildTrigger>
                        <spec></spec>
                        <upstreamProjects>repository-update</upstreamProjects>
                        <threshold>
                            <name>SUCCESS</name>
                            <ordinal>0</ordinal>
                            <color>BLUE</color>
                            <completeBuild>true</completeBuild>
                        </threshold>
                        </jenkins.triggers.ReverseBuildTrigger>
                    </triggers>
                </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
    dsl: |
        pipeline {
            agent {
                label "repository"
            }
            stages {
              stage("Checkout Infrastructure") {
                    steps {
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-Infrastructure']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }
                }
                stage('Merge') {
                    agent {
                        dockerfile {
                            dir "SapMachine-Infrastructure/dockerfiles/infrastructure"
                            reuseNode true
                            label "repository"
                        }
                    }
                    environment {
                        JENKINS_CREDENTIALS = credentials('sapmachine-jenkins')
                        GITHUB_API_ACCESS_TOKEN = credentials('SapMachine-Github-Token')
                    }
                    steps {
                      withCredentials([
                            [$class: 'UsernamePasswordMultiBinding', credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD']
                            ]) {
                            sh '''
                            python3 SapMachine-Infrastructure/lib/merge_jdk_tags.py
                            python3 SapMachine-Infrastructure/lib/create_sapmachine_tags.py
                            '''
                        }
                    }
                }
            }
            post {
                cleanup {
                    cleanWs deleteDirs: true, disableDeferredWipeout: true
                }
            }
        }
