- job:
  name: jenkins-job-generator
  description: 'This project is generated. Do not modify manually.'
  project-type: pipeline
  concurrent: false
  properties:
        - raw:
            xml: |
              <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
                  <useBuildBlocker>true</useBuildBlocker>
                  <blockLevel>GLOBAL</blockLevel>
                  <scanQueueFor>DISABLED</scanQueueFor>
                  <blockingJobs>.*</blockingJobs>
              </hudson.plugins.buildblocker.BuildBlockerProperty
  dsl: |
      pipeline {
          agent {
              label "repository"
          }
          triggers {
              pollSCM 'H/2 * * * *'
          }
          stages {
              stage("Checkout Infrastructure") {
                  steps {
                      checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], includedRegions: 'jenkins-job-generator/.*', doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-Infrastructure']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                  }
              }
              stage('Generate') {
                  agent {
                      dockerfile {
                          dir "SapMachine-Infrastructure/dockerfiles/infrastructure"
                          reuseNode true
                          label "repository"
                      }
                  }
                  steps {
                      withCredentials([
                              [$class: 'UsernamePasswordMultiBinding', credentialsId: 'sapmachine-jenkins', usernameVariable: 'JENKINS_USER', passwordVariable: 'JENKINS_PASSWORD']
                              ]) {
                          sh "cd SapMachine-Infrastructure/jenkins-job-generator && jenkins-jobs --conf jenkins_jobs.ini --user ${JENKINS_USER} --password ${JENKINS_PASSWORD} update --delete-old ./definitions"
                      }
                  }
              }
          }
          post {
              cleanup {
                  cleanWs deleteDirs: true, disableDeferredWipeout: true
              }
          }
      }

- job:
  name: jenkins-configuration-backup
  description: 'This project is generated. Do not modify manually.'
  project-type: pipeline
  concurrent: false
  triggers:
    - timed: "@midnight"
  dsl: |
      pipeline {
          agent {
              node {
                  label 'master'
              }
          }
          stages {
              stage("Checkout Infrastructure") {
                  steps {
                      checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-Infrastructure']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                  }
              }
              stage('Backup') {
                  steps {
                    withCredentials([
                        [$class: 'UsernamePasswordMultiBinding', credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD']
                        ]) {
                      sh '''
                        python SapMachine-Infrastructure/lib/jenkins_backup.py -s /var/jenkins_home
                        '''
                      }
                  }
              }
          }
          post {
              cleanup {
                  cleanWs deleteDirs: true, disableDeferredWipeout: true
              }
          }
      }

- job:
  name: jenkins-configuration-restore
  description: 'This project is generated. Do not modify manually.'
  project-type: pipeline
  concurrent: false
  dsl: |
      pipeline {
          agent {
              node {
                  label 'master'
              }
          }
          stages {
              stage("Checkout Infrastructure") {
                  steps {
                      checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-Infrastructure']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                  }
              }
              stage('Backup') {
                  steps {
                    withCredentials([
                        [$class: 'UsernamePasswordMultiBinding', credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD']
                        ]) {
                      sh '''
                        python SapMachine-Infrastructure/lib/jenkins_restore.py -s . -t /var/lib/jenkins
                        '''
                      }
                  }
              }
          }
          post {
              cleanup {
                  cleanWs deleteDirs: true, disableDeferredWipeout: true
              }
          }
      }
