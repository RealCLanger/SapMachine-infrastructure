<org.jenkinsci.plugins.github.pullrequest.GitHubPRRepository plugin="github-pullrequest@0.4.0">
  <fullName>SAP/SapMachine</fullName>
  <githubUrl>https://github.com/SAP/SapMachine</githubUrl>
  <gitUrl>git://github.com/SAP/SapMachine.git</gitUrl>
  <sshUrl>git@github.com:SAP/SapMachine.git</sshUrl>
  <pulls class="concurrent-hash-map">
    <entry>
      <int>1059</int>
      <org.jenkinsci.plugins.github.pullrequest.GitHubPRPullRequest>
        <number>1059</number>
        <issueUpdatedAt>2022-03-16 22:22:32.0 UTC</issueUpdatedAt>
        <title>Sapmachine vitals update pack march 22</title>
        <body>Minor stuff, but may be onerous to review. I split this up into separate commits, each one should be simple.

In detail:

1) https://github.com/SAP/SapMachine/pull/1059/commits/5e067a792b3a39039c255cb328f048e1cfb7835c "INCLUDE_NMT workaround and better JDK version independence"

This adds a small pragmatic workaround to make downporting Vitals changes to older SapMachine releases easier. The idea is to keep the coding version agnostic, just guard sections that are version dependent with `JDK_MAINLINE`, `JDK_17u` or `JDK_11u`. 

The first use case, here, is defining the `INCLUDE_NMT` macro depending on the version we compile for. It disappeared recently in mainline, but older SapMachine versions still need it.

2) https://github.com/SAP/SapMachine/pull/1059/commits/02b7e36f62d7aa6ad0fe3bf5fd62e2926c6595b0 "Make table time spans independent from sample freq"

This slightly modifies the way we define the record tables in vitals.

Before, we had three tables (long, mid, short term) and defined the number of samples in them. Problem with that was that if you increased the sample frequency with `VitalsSampleInterval` you also modified the time the tables covered. `VitalsSampleInterval=1` (highest frequency) reduced the time span for the short term table from 1 hour to 6 minutes. This was annoying.

The new version defines the table time spans as constants, and calculates the number of needed sample entries from that. Short term table covers 1 hour, independent on sample frequency. Long term table now covers 14 days (up from 10), with one sample per hour.

I removed the mid term table, because I had the feeling nobody was really using it.

3) https://github.com/SAP/SapMachine/pull/1059/commits/d2b61a9aa45f2ffd361b80ed1e839f23002048ab "make csv reports easier to parse"

I use csv mode extensively for reports, and I tweaked the output a bit to be easier to get digested by Excel and gnuplot.

4) https://github.com/SAP/SapMachine/commit/416be746407c9abb8cbf1aadcb49c3879ab1048a "Print timestamp for all samples (also the "now" sample)"

We used to print "Now" instead of the timestamp for the "now-sample" (the sample taken the moment the report is generated, e.g. when we crash and write to hs-err). That was inconvienient. The new version just prints the time that is now.

5) https://github.com/SAP/SapMachine/commit/a91223b830575a25d91a099642c2097fad20ccf7 "make system-committed a separate column in linux"

On Linux, some time ago I added the column "crt" as commit ratio (committed space to commit limit). That shows at one glance whether we overcommit.

But it would be good to have the real number of committed bytes machine-wide too. I added that column.

6) https://github.com/SAP/SapMachine/commit/71a0b9b3b12d5063e2064c30584b9c2bd0c67a91 "New Improved Tests"

We lacked tests to test Vitals, and I did many tests manually. Here we add automated regression tests.

I also fix two minor problems:
- when printing csv, I forgot to quote the timestamp, and sometimes this confuses csv parsers (especially gnuplot)
- I added some minor trivial logging, just to have some log output to check in jtreg tests

7) https://github.com/SAP/SapMachine/commit/20a20bff575e68a2ab3fa663799d0fb5fbd109f4 "Fix Now value printing in hs-err, plus regression test"

Fixes a regression that caused the "Now" value not to be printed in hs-err files. The only place where that is really useful. I re-added it and wrote a regression test.

Thanks to all reviewers,

Thomas

fixes #1058

</body>
        <prUpdatedAt>2022-03-16 22:22:32.0 UTC</prUpdatedAt>
        <headSha>af67db38cdee961c701f06283d96ebf41761e8ac</headSha>
        <headRef>sapmachine-vitals-update-pack-march-22</headRef>
        <mergeable>true</mergeable>
        <baseRef>sapmachine</baseRef>
        <userLogin>tstuefe</userLogin>
        <htmlUrl>https://github.com/SAP/SapMachine/pull/1059</htmlUrl>
        <labels />
        <lastCommentCreatedAt>2022-03-16 22:22:32.0 UTC</lastCommentCreatedAt>
        <sourceRepoOwner>tstuefe</sourceRepoOwner>
        <state>OPEN</state>
        <inBadState>false</inBadState>
      </org.jenkinsci.plugins.github.pullrequest.GitHubPRPullRequest>
    </entry>
    <entry>
      <int>1060</int>
      <org.jenkinsci.plugins.github.pullrequest.GitHubPRPullRequest>
        <number>1060</number>
        <issueUpdatedAt>2022-03-17 00:30:33.0 UTC</issueUpdatedAt>
        <title>Merge to tag jdk-11.0.15+6</title>
        <body>please pull</body>
        <prUpdatedAt>2022-03-17 00:30:33.0 UTC</prUpdatedAt>
        <headSha>f7346f087a14f1878029a00104005e04468d333f</headSha>
        <headRef>pr-jdk-11.0.15+6</headRef>
        <mergeable>true</mergeable>
        <baseRef>sapmachine11</baseRef>
        <userLogin>SapMachine</userLogin>
        <htmlUrl>https://github.com/SAP/SapMachine/pull/1060</htmlUrl>
        <labels />
        <sourceRepoOwner>SAP</sourceRepoOwner>
        <state>OPEN</state>
        <inBadState>false</inBadState>
      </org.jenkinsci.plugins.github.pullrequest.GitHubPRPullRequest>
    </entry>
  </pulls>
</org.jenkinsci.plugins.github.pullrequest.GitHubPRRepository>