# Copyright (c) 2001-2018 by SAP SE, Walldorf, Germany.
# All rights reserved. Confidential and proprietary.

version: '2'
networks:
  ext:
volumes:
  certs:
  vhosts:
  html:
  acme:
  jenkins_home:
  jenkins_log:
  pkg:
  clients:
  ci_client_ubuntu-jenkins:
  ci_client_ubuntu-gpg:
  ci_client_ubuntu-agent:
services:
  # reverse proxy
  nginxproxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    container_name: nginxproxy
    hostname: nginxproxy
    restart:
      unless-stopped
    networks:
      - ext
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhosts:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - 80:80
      - 443:443
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
  # companion for lets encrypt certificates
  nginxproxy_comp:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginxproxy_comp
    hostname: nginxproxy_comp
    restart:
      unless-stopped
    depends_on:
      - nginxproxy
    networks:
      - ext
    volumes:
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh
    volumes_from:
      - nginxproxy
  # uncomment this for testing
  #  environment:
  #    - ACME_CA_URI=https://acme-staging.api.letsencrypt.org/directory
  # redirects to the sapmachine github page
  redirect_server:
    build:
      context: ./redirect
      dockerfile: Dockerfile
    container_name: redirect
    restart:
      unless-stopped
    depends_on:
      - nginxproxy
      - nginxproxy_comp
    networks:
      - ext
    environment:
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=${URL_ROOT}
      - LETSENCRYPT_HOST=${URL_ROOT}
      - LETSENCRYPT_EMAIL=${SAPMACHINE_EMAIL}
  # redirects "www" to the sapmachine github page
  redirect_server_www:
    build:
      context: ./redirect
      dockerfile: Dockerfile
    container_name: redirect_www
    restart:
      unless-stopped
    depends_on:
      - nginxproxy
      - nginxproxy_comp
    networks:
      - ext
    environment:
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=www.${URL_ROOT}
      - LETSENCRYPT_HOST=www.${URL_ROOT}
      - LETSENCRYPT_EMAIL=${SAPMACHINE_EMAIL}
  # linux package distribution server
  dist_server:
    build:
      context: ./dist
      dockerfile: Dockerfile
    container_name: dist
    restart:
      unless-stopped
    depends_on:
      - nginxproxy
      - nginxproxy_comp
    networks:
      - ext
    volumes:
      - pkg:/var/pkg
    environment:
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=dist.${URL_ROOT}
      - HTTPS_METHOD=noredirect
      - LETSENCRYPT_HOST=dist.${URL_ROOT}
      - LETSENCRYPT_EMAIL=${SAPMACHINE_EMAIL}
  # jenkins server
  jenkins_server:
    build:
      context: ./ci
      dockerfile: Dockerfile
    container_name: ci
    restart:
      unless-stopped
    depends_on:
      - nginxproxy
      - nginxproxy_comp
      - dist_server
    networks:
      - ext
    volumes:
      - jenkins_home:/var/jenkins_home
      - jenkins_log:/var/log/jenkins
      - pkg:/var/pkg
      - clients:/var/clients
    ports:
      # exposed port for jenkins clients
      - 50000:50000
    environment:
      - VIRTUAL_PORT=8080
      - VIRTUAL_HOST=ci.${URL_ROOT}
      - LETSENCRYPT_HOST=ci.${URL_ROOT}
      - LETSENCRYPT_EMAIL=${SAPMACHINE_EMAIL}
  # jenkins ubuntu client
  ci_client_ubuntu:
      build:
        context: ./ci-client-ubuntu
        dockerfile: Dockerfile
      container_name: ci-client-ubuntu
      restart:
        unless-stopped
      depends_on:
        - jenkins_server
      networks:
        - ext
      volumes:
        - ci_client_ubuntu-jenkins:/home/jenkins/.jenkins
        - ci_client_ubuntu-gpg:/home/jenkins/.gnupg
        - ci_client_ubuntu-agent:/home/jenkins/agent
        - pkg:/var/pkg
        - clients:/var/clients
      environment:
        - SERVER_URL=https://ci.${URL_ROOT}/computer/${UBUNTU_CLIENT_NAME}/jenkins-agent.jnlp
        - CLIENT_NAME=${UBUNTU_CLIENT_NAME}
        - CLIENT_NO_CERTIFICATE_CHECK=${CLIENT_NO_CERTIFICATE_CHECK}
