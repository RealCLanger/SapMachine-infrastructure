# Copyright (c) 2001-2021 by SAP SE, Walldorf, Germany.
# All rights reserved. Confidential and proprietary.

# ansible 2.9
---
  - name: Setup SapMachine server
    hosts: SapMachineServer
    gather_facts: Yes
    pre_tasks:
      - name: 'install python'
        raw: sudo rm -rf /etc/apt/sources.list.d/dist_sapmachine_io_debian_amd64.list && sudo apt-get update && sudo apt-get -qq -y --no-install-recommends install python python3
    vars:
      ansible_user: ubuntu
      ansible_ssh_private_key_file: SapMachine.pem
      jenkins_server_url: https://ci.sapmachine.io/computer/agent-linux-x86_64-1/slave-agent.jnlp
      jenkins_client_name: agent-linux-x86_64-1

    tasks:

      - name: System details
        debug: msg="{{ item }}"
        with_items:
        - "{{ ansible_distribution }}"
        - "{{ ansible_distribution_version }}"
        - "{{ ansible_distribution_major_version }}"

      - name: install apt-transport-https
        apt:
          name: apt-transport-https
          state: latest
          install_recommends: no
        become: yes
        tags:
          - packages.apt-transport-https

      - name: install curl
        apt:
          name: curl
          state: latest
          install_recommends: no
        become: yes
        tags:
          - packages.apt-transport-https

      - name: add docker apt key
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present
        become: yes
        tags:
          - packages.docker_key

      - name: add docker repository 16.04 Xenial
        apt_repository:
         repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
         state: present
        become: yes
        tags:
          - packages.docker_repository_xenial
        when: ansible_distribution_major_version == '16'

      - name: add docker repository 18.04 Bionic
        apt_repository:
         repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
         state: present
        become: yes
        tags:
          - packages.docker_repository_bionic
        when: ansible_distribution_major_version == '18'

      - name: add docker repository 20.04 Focal
        apt_repository:
         repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
         state: present
        become: yes
        tags:
          - packages.docker_repository_focal
        when: ansible_distribution_major_version == '20'

      # install docker and docker-compose
      - name: install docker-ce
        apt:
          name: docker-ce
          state: latest
          install_recommends: no
        become: yes
        tags:
          - packages.docker-ce

      - name: install docker-compose
        apt:
          name: docker-compose
          state: latest
          install_recommends: no
        become: yes
        tags:
          - packages.docker-compose

      - name: install zip
        apt:
         name: zip
         state: latest
         install_recommends: no
        become: yes
        tags:
          - packages.zip

      - name: install unzip
        apt:
         name: unzip
         state: latest
         install_recommends: no
        become: yes
        tags:
          - packages.zip

      # create sapmachine group and user
      # used for running the docker container
      - name: create sapmachine group
        group:
          name: sapmachine
          state: present
        become: yes
        tags:
          - groups.create_sapmachine

      - name: create sapmachine user
        user:
          name: sapmachine
          comment: "SapMachine user"
          group: sapmachine
          groups: sapmachine, docker
        become: yes
        tags:
          - users.create_sapmachine

      # create jenkins group and user
      # used for running the jenkins client
      - name: create jenkins group
        group:
          name: jenkins
          state: present
        become: yes
        tags:
          - jenkins_client
          - groups.create_jenkins

      - name: create jenkins user
        user:
          name: jenkins
          comment: "Jenkins user"
          groups: jenkins, docker
        become: yes
        tags:
          - jenkins_client
          - users.create_jenkins

      # copy the sapmachine server files, containing the docker container
      # and docker compose configuration
      - name: copy sapmachine_server files
        synchronize:
          src: ../../
          dest: /home/sapmachine/sapmachine_server
          recursive: yes
          rsync_opts:
            - "--exclude=.git*"
            - "--exclude=ansible"
        become: yes
        become_user: sapmachine
        tags:
          - sapmachine.copy

      # set the ownership of samachine_server to sapmachine:sapmachine
      - name: set ownership of sapmachine_server
        file:
          path: /home/sapmachine/sapmachine_server
          owner: sapmachine
          group: sapmachine
          recurse: yes
        become: yes
        tags:
          - sapmachine.set_ownership

      # create the jenkins client home directory
      - name: create Jenkins client home directory
        file:
          path: /home/jenkins/client-home
          state: directory
        become: yes
        become_user: jenkins
        tags:
          - jenkins_client
          - jenkins_client.create_home

      # copy the script file to start the jenkins client
      - name: copy Jenkins client files
        synchronize:
          src: ../ci-client-local/start-client.sh
          dest: /home/jenkins/start-client.sh
        become: yes
        become_user: jenkins
        tags:
          - jenkins_client
          - jenkins_client.copy_files

      # in case any docker container is running, stop them
      - name: stop all running docker container
        shell: docker stop $(docker ps -a -q)
        become: yes
        become_user: sapmachine
        failed_when: false
        tags:
          - docker.container_stop

      # enable Docker IPv6
      - name: install Docker Daemon configuration
        copy:
          src: daemon.json
          dest: /etc/docker/daemon.json
          owner: root
          group: root
          mode: 0644
        become: yes
        tags:
          - docker.config_install

      - name: reload the Docker Daemon configuration
        systemd: state=restarted name=docker
        become: yes
        tags:
          - docker.config_reload

      # stop all running java processes (jenkins client)
      - name: stop all Java processes
        command: killall -9 java
        become: yes
        failed_when: false
        tags:
          - jenkins_client
          - java.kill_all

      # update docker images
      - name: remove all docker container
        shell: docker rm $(docker ps -a -q)
        become: yes
        become_user: sapmachine
        failed_when: false
        tags:
          - docker.container_remove

      - name: purge dangling docker images
        command: docker images purge
        become: yes
        become_user: sapmachine
        tags:
          - docker.images_purge

      - name: remove all docker images
        shell: docker rmi $(docker images -a -q)
        become: yes
        become_user: sapmachine
        failed_when: false
        tags:
          - docker.images_remove

      # compose and start all docker containers
      - name: run docker-compose
        command: docker-compose -f ./compose.yml up -d --build
        args:
          chdir: /home/sapmachine/sapmachine_server
        become: yes
        become_user: sapmachine
        tags:
          - docker.compose

      # these files are no longer needed and contain sensitive data
      # remove them
      - name: remove sapmachine_server
        file:
          path: /home/sapmachine/sapmachine_server
          state: absent
        become: yes
        become_user: sapmachine
        tags:
          - sapmachine_server.remove

      # wait for the jenkins server to come up
      # and read the SapMachine user password
      - name: wait for Jenkins server to come up
        command: docker exec ci bash /usr/share/jenkins/read-sapmachine-pw.sh
        become: yes
        become_user: sapmachine
        register: sapmachine_pw
        tags:
          - jenkins_server.wait_for

      - name: "wait for dist.sapmachine.io"
        uri:
          url: "http://dist.sapmachine.io/debian/amd64/Packages"
          status_code: 200
        register: result
        until: result.status == 200
        retries: 60
        delay: 1
        tags:
          - packages.sapmachine_key

      - name: add SapMachine apt key
        apt_key:
          url: https://dist.sapmachine.io/debian/sapmachine.key
          state: present
        become: yes
        tags:
          - packages.sapmachine_key

      - name: add SapMachine repository
        apt_repository:
          repo: deb http://dist.sapmachine.io/debian/amd64/ ./
          state: present
        become: yes
        tags:
          - packages.sapmachine_repository

      - name: install SapMachine 11 JDK
        apt:
          name: sapmachine-11-jdk
          state: latest
          install_recommends: no
        become: yes
        tags:
          - packages.sapmachine
          - jenkins_client

      # read the jenkins client secret for the jenkins client
      - name: read Jenkins client secret
        command: "docker exec ci bash /usr/share/jenkins/read-client-secret.sh {{ jenkins_client_name }}"
        become: yes
        become_user: jenkins
        register: client_secret
        tags:
          - jenkins_client
          - jenkins_client.secret

      - name: "wait for ci.sapmachine.io"
        uri:
          url: "http://ci.sapmachine.io"
          status_code: 200
        register: result
        until: result.status == 200
        retries: 60
        delay: 1
        tags:
          - jenkins_client

      # download the jenkins client jar file
      - name: download Jenkins client jar
        get_url:
          url: "http://ci.sapmachine.io/jnlpJars/agent.jar"
          dest: /home/jenkins/client.jar
          force: yes
        become: yes
        become_user: jenkins
        tags:
          - jenkins_client
          - jenkins_client.download_client_jar

      # start the jenkins client
      - name: start Jenkins client
        command: "/home/jenkins/start-client.sh {{ jenkins_server_url }} {{ client_secret.stdout }}"
        args:
          chdir: /home/jenkins
        become: yes
        become_user: jenkins
        tags:
          - jenkins_client
          - jenkins_client.start

      # display the jenkins SapMachine password
      - name: show Jenkins SapMachine password
        debug:
          msg:
            - "user: SapMachine"
            - "password: {{ sapmachine_pw.stdout }}"
