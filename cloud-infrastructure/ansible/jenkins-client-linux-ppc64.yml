# Copyright (c) 2001-2021 by SAP SE, Walldorf, Germany.
# All rights reserved. Confidential and proprietary.

# ansible 2.4
---
  - name: Setup SapMachine Linux ppc64 Client
    hosts: SapMachineClient-Linux-ppc64
    gather_facts: False
    pre_tasks:
      - name: 'install python2'
        raw: sudo dnf -y install python libselinux-python
    vars:
      client_jar_version: 3.21
      jenkins_server_url: https://ci.sapmachine.io/computer/agent-linux-ppc64-1/slave-agent.jnlp
      jenkins_client_name: agent-linux-ppc64-1
      boot_jdk_url: https://github.com/SAP/SapMachine/releases/download/sapmachine-11.0.1%2B13-0/sapmachine-jdk-11.0.1.13_linux-ppc64_bin.tar.gz

    tasks:

      - name: install perl
        dnf:
          name: perl
          state: latest
        become: yes

      - name: install OpenJDK 8 JDK
        dnf:
          name: java-1.8.0-openjdk-devel
          state: latest
        become: yes

      - name: install gcc
        dnf:
          name: gcc
          state: latest
        become: yes

      - name: install g++
        dnf:
          name: gcc-c++
          state: latest
        become: yes

      - name: install make
        dnf:
          name: make
          state: latest
        become: yes

      - name: install autoconf
        dnf:
          name: autoconf
          state: latest
        become: yes

      - name: install automake
        dnf:
          name: automake
          state: latest
        become: yes

      - name: install zip
        dnf:
          name: zip
          state: latest
        become: yes

      - name: install unzip
        dnf:
          name: unzip
          state: latest
        become: yes

      - name: install git
        dnf:
          name: git
          state: latest
        become: yes

      - name: install psmisc
        dnf:
          name: psmisc
          state: latest
        become: yes

      - name: install mercurial
        dnf:
          name: mercurial
          state: latest
        become: yes

      - name: install fontconfig-devel
        dnf:
          name: fontconfig-devel
          state: latest
        become: yes

      - name: install shasum
        dnf:
          name: perl-Digest-SHA
          state: latest
        become: yes

      - name: download Boot JDK
        get_url:
          url: "{{ boot_jdk_url }}"
          dest: /opt
          force: yes
        become: yes
        register: boot_jdk_result
        tags:
          - boot_jdk

      - name: remove Boot JDK directory
        file:
          path: "/opt/boot_jdk"
          state: absent
        become: yes
        tags:
          - boot_jdk

      - name: create Boot JDK directory
        file:
          path: "/opt/boot_jdk"
          state: directory
          mode: 0755
        become: yes
        tags:
          - boot_jdk

      - name: extract Boot JDK
        unarchive:
          src: "{{ boot_jdk_result.dest }}"
          dest: "/opt/boot_jdk"
          remote_src: yes
          extra_opts: [--strip-components=1]
        become: yes
        tags:
          - boot_jdk

      - name: remove Boot JDK archvive
        file:
          path: "{{ boot_jdk_result.dest }}"
          state: absent
        become: yes
        tags:
          - boot_jdk

      # create jenkins group and user
      # used for running the jenkins client
      - name: create jenkins group
        group:
          name: jenkins
          state: present
        become: yes
        tags:
          - groups.create_jenkins

      - name: create jenkins user
        user:
          name: jenkins
          comment: "Jenkins user"
          groups: jenkins
        become: yes
        tags:
          - users.create_jenkins

      # create the jenkins client home directory
      - name: create Jenkins client home directory
        file:
          path: /home/jenkins/client-home
          state: directory
        become: yes
        become_user: jenkins
        tags:
          - jenkins_client.create_home

      # download the jenkins client jar file
      - name: download Jenkins client jar
        get_url:
          url: "https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/{{ client_jar_version }}/remoting-{{ client_jar_version }}.jar"
          dest: /home/jenkins/client.jar
          force: yes
        become: yes
        become_user: jenkins
        tags:
          - client.download_client_jar

      # copy the script file to start the jenkins client
      - name: copy Jenkins client files
        synchronize:
          src: ../ci-client-local/start-client.sh
          dest: /home/jenkins/start-client.sh
        become: yes
        become_user: jenkins
        tags:
          - jenkins_client.copy_files

      # stop all running java processes (jenkins client)
      - name: stop all Java processes
        command: killall -9 java
        become: yes
        become_user: jenkins
        failed_when: false
        tags:
          - java.kill_all

      # start the jenkins client
      - name: start Jenkins client
        command: "/home/jenkins/start-client.sh {{ jenkins_server_url }} {{ jenkins_client_secret }}"
        args:
          chdir: /home/jenkins
        become: yes
        become_user: jenkins
        tags:
          - jenkins_client.start

